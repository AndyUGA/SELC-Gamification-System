<div class="container mt-5">

  <button class="btn btn-info positiveSparkForm">
    test
  </button>

  <div id="loading" class="row">

  </div>


  <!--
  <div class="row">
    <% for(let i = 0; i < userInfoLength; i++) { %>
      <div class="col-3 d-flex justify-content-center mb-5">
        <div class="card">
          <img class="img-fluid team-img-maxSize" src="https://pngimg.com/uploads/tree/tree_PNG3498.png" id="profileImg<%=i%>">
          <div id="name" class="text-center">
            <%= userInfo[i].fullName %> (<span id="updatedPositiveSparkCounter<%=i%>"><%= userInfo[i].positiveSparkCounter%></span>)
          </div>
          <form class="positiveSparkForm" method="POST">
            <button type="button" class="btn btn-info">
              Tap
              <img class="tap-icon" src="./Images/VirtualSparks/tap.svg">
            </button>
            <input hidden value="<%= userInfo[i].email%>">
            <input hidden value="<%= i %>">
          </form>

        </div>
      </div>
      <% } %>
  </div>
-->

</div>
<input hidden id="userInfoLength" value="<%= userInfoLength %>">

<% for(let i = 0; i < userInfoLength; i++) { %>
  <input hidden id="userIdentifier<%=i%>" value="<%= userInfo[i].uid %><%=i*2%>">
  <input hidden id="userID<%=i%>" value="<%= userInfo[i].uid %>">
  <input hidden id="userInfo<%=i%>" value="<%= userInfo[i].uid %><%=i*3%>">
  <input hidden id="userData<%=i%>" value="<%= userInfo[i].uid %><%=i+3%>">
  <% } %>


    <script src="https://www.gstatic.com/firebasejs/7.22.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.22.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.22.1/firebase-storage.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.22.1/firebase-firestore.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/js-cookie@rc/dist/js.cookie.min.js"></script>

    <script>












      const firebaseConfig = {
        apiKey: "AIzaSyCic5UWC0fXladccjESHt2eEUFR3GCpu7k",
        authDomain: "test-73b01.firebaseapp.com",
        databaseURL: "https://test-73b01.firebaseio.com",
        projectId: "test-73b01",
        storageBucket: "test-73b01.appspot.com",
        messagingSenderId: "622256382010",
        appId: "1:622256382010:web:305e70e752a5a757c2d503"
      };

      firebase.initializeApp(firebaseConfig);

      const auth = firebase.auth();
      const db = firebase.firestore();

      auth.onAuthStateChanged(user => {
        console.log(82),  Cookies.get("XSRF-TOKEN");
        let updatedCount = '';
        let profileImageURL;
        let currentSparkCounter = '';

        let i = 0;
        console.log(88, user);

        db.collection('users').get().then(snapshot => {

          snapshot.forEach((doc) => {


            if (doc.data().email == user.email) {
              currentSparkCounter = `(${doc.data().positiveSparkCounter})`;
            }

            updatedCount += `
           <div class="col-3 d-flex justify-content-center mb-5">
        <div class="card">
          <img class="img-fluid team-img-maxSize" src="">
          <div id="name${doc.data().uid}" class="text-center">
           ${doc.data().fullName} ${(currentSparkCounter)}
          </div>

          <form class = "positiveSparkForm">
            <button class="btn btn-info">
              Tap
              <img class="tap-icon" src="./Images/VirtualSparks/tap.svg">
            </button>
           <input hidden value = "${doc.data().email}" />
            </form>

        </div>
      </div>
           `
            i++;
            currentSparkCounter = '';
          });
          document.querySelector('#loading').innerHTML = updatedCount;
          updatedCount = '';

          $(".positiveSparkForm").click(function (e) {
            e.preventDefault();

            console.log(126, e.currentTarget[1].value);
            let email = e.currentTarget[1].value;


            return fetch("/updatePositiveSparkCounter/" + email, {
              method: "POST",
              headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
                "CSRF-Token": Cookies.get("XSRF-TOKEN"),
              }
            });

           



          });
        });


        db.collection('users').onSnapshot(snapshot => {
          console.log(138);
          snapshot.docChanges().forEach((doc) => {

            $(`#name${doc.doc.data().uid}`).html(`
            <div id="name${doc.doc.data().uid}" class="text-center">
              ${doc.doc.data().fullName} ${(doc.doc.data().positiveSparkCounter)}
            </div>
            `);
            // firebase.storage().ref('users/' + `${doc.data().uid}` + '/profile.jpg').getDownloadURL()
            //   .then(imgURL => {

            //       profileImageURL = imgURL;


            //   })
            //   .catch(err => {
            //     //console.log(51, err)
            //   });


            // if(doc.data().email == user.email) {
            //   currentSparkCounter = `(${doc.data().positiveSparkCounter})`;
            // }


          })


        });
      });

      /*
      for (let i = 0; i < document.getElementById(`userInfoLength`).getAttribute("value"); i++) {

        firebase.storage().ref('users/' + document.getElementById(`userID${i}`).getAttribute("value") + '/profile.jpg').getDownloadURL()
          .then(imgURL => {
            if (imgURL) {
              document.getElementById("profileImg" + i).src = imgURL;
            }
          })
          .catch(err => {
            console.log(51, err)
          });
      }

      */






    </script>